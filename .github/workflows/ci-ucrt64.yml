name: UCRT64 Qt5 Build

on:
  push:
    paths-ignore:
    - '**/*.md'
  pull_request:
    paths-ignore:
    - '**/*.md'

concurrency:  
  group: ${{ github.workflow}}-${{ github.head_ref }}  
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    permissions:
      actions: write
    defaults:
      run:
        shell: msys2 {0}
  strategy:
    matrix:
      include:
        - { sys: mingw64, env: ${{matrix.env}} }
        - { sys: ucrt64,  env: ucrt-${{matrix.env}} }
        - { sys: clang64, env: clang-${{matrix.env}} }
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup MSYS2
        uses: msys2/setup-msys2@40677d36a502eb2cf0fb808cc9dec31bf6152638 # v2.28.0
        with:
#          msystem: UCRT64
          update: true
          install: >-
            base-devel
            git
            wget
            p7zip
            gcc
            perl
            ruby
            doxygen
            cmake
            mingw-w64-ucrt-${{matrix.env}}-toolchain
            mingw-w64-ucrt-${{matrix.env}}-miniupnpc
            mingw-w64-ucrt-${{matrix.env}}-libxslt
            mingw-w64-ucrt-${{matrix.env}}-xapian-core
            mingw-w64-ucrt-${{matrix.env}}-sqlcipher
            mingw-w64-ucrt-${{matrix.env}}-qt5-base
            mingw-w64-ucrt-${{matrix.env}}-qt5-multimedia
            mingw-w64-ucrt-${{matrix.env}}-ccmake
            mingw-w64-ucrt-${{matrix.env}}-rapidjson
            mingw-w64-ucrt-${{matrix.env}}-json-c
            mingw-w64-ucrt-${{matrix.env}}-libbotan
            mingw-w64-ucrt-${{matrix.env}}-asio

      - name: Checkout submodules
        run: |
          env
          git submodule update --init --remote libbitdht/ libretroshare/ retroshare-webui/
          git submodule update --init supportlibs/librnp supportlibs/rapidjson supportlibs/restbed
      - name: make build directory
        run: mkdir build && cd build && pwd
      - name: CI-Build qmake
        run: |
          pwd
          ls
          pwd
          ls ..
          cd build
          pwd
          qmake .. -r -spec win32-g++ "CONFIG+=release" "CONFIG+=rs_jsonapi" "CONFIG+=rs_webui" "CONFIG+=rs_autologin" "CONFIG+=no_rs_sam3" "CONFIG+=no_rs_sam3_libsam3"
      - name: list content of build directory
        run: |
          cd build
          pwd
          mkdir -p jsonapi-generator/src/xml
          find .
      - name: CI-Build make
        run: |
          cd build
          pwd
          mingw32-make --jobs=1
